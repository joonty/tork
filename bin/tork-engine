#!/usr/bin/env ruby
=begin =======================================================================

# TORK-ENGINE 1 2012-09-26 18.2.3

## NAME

tork-engine - wraps tork-master(1) with bookkeeping

## SYNOPSIS

`tork-engine` [*OPTION*]...

## DESCRIPTION

This program tells tork-master(1) to run your tests and keeps track of test
results.  It reads the following single-line commands (JSON arrays) from its
standard input stream and performs the respective actions as described below.
It also funnels the standard output stream of tork-master(1) into its own.

`["reabsorb_overhead",` *paths*`,` *files*`]`
  Stops any test files that are currently running, reabsorbs the given test
  execution overhead, and resumes running those interrupted test files.  See
  the "load" command in tork-master(1) for more information.

`["run_test_file"`, *test_file*`,` *line_numbers*...`]`
  Runs tests that correspond to the given sequence of *line_numbers* in the
  given *test_file*.  If no *line_numbers* are given, then only those lines
  that have changed since the last run of *test_file* will be substituted.

`["stop_running_test_files"`, *signal*`]`
  Stops any test files that are currently running by sending the given
  *signal* (default `SIGTERM`) to their worker processes.

`["kill_running_test_files"]`
  Forcefully stops any test files that are currently running by sending the
  unstoppable SIGKILL signal to instantly terminate their worker processes.

`["rerun_passed_test_files"]`
  Runs all test files that have passed during their most recent run.

`["rerun_failed_test_files"]`
  Runs all test files that have failed during their most recent run.

`["quit"]`
  Stops all tests that are currently running and exits.

## OPTIONS

`-h`, `--help`
  Show this help manual.

## FILES

*.tork.rb*
  Optional Ruby script for configuring tork(1).

## ENVIRONMENT

`TORK_CONFIGS`
  A single-line JSON array containing paths to actual files or names of
  helper libraries in the tork/config/ namespace of Ruby's load path.
  These configuration files are loaded just before *.tork.rb* is loaded.

## SEE ALSO

tork(1), tork-herald(1), tork-driver(1), tork-engine(1), tork-master(1)

=end =========================================================================

$0 = File.basename(__FILE__) # for easier identification in ps(1) output

require 'binman'
BinMan.help

require 'tork/engine'
Tork::Engine.new.loop
