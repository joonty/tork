#!/usr/bin/env ruby
=begin =======================================================================

# TORK-READER 1 2012-09-26 18.2.3

## NAME

tork-reader - multiplexes stdin with tork-writer(1) output

## SYNOPSIS

`tork-reader` [*OPTION*]...

## DESCRIPTION

This program multiplexes its stdin with output from remote tork-writer(1)
instances that are running in the same working directory as this program.
It continuously copies lines from this multiplexed input to its stdout until
its stdin is closed (by pressing Control-D if its stdin is your terminal).

## OPTIONS

`-h`, `--help`
  Show this help manual.

## SEE ALSO

tork-writer(1)

=end =========================================================================

$0 = File.basename(__FILE__) # for easier identification in ps(1) output

require 'binman'
BinMan.help

require 'socket'
begin
  UNIXServer.open('.tork.us') do |server|
    begin
      STDOUT.sync = true # flush puts() output immediately after writing
      clients = [STDIN, server]
      while clients.include? STDIN
        select(clients).first.each do |reader|
          if reader == server
            clients << reader.accept
            next
          elsif reader.eof?
            clients.delete reader
            next
          end
          puts reader.gets
        end
      end
    ensure
      # socket file is not automatically deleted from filesystem upon close
      File.delete server.path
    end
  end
rescue Errno::EADDRINUSE
  warn "#{$0}: another instance is already running"
  exit false
end
